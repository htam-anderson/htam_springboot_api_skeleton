plugins {
	id 'org.springframework.boot' version '2.2.5.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'jacoco'
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

archivesBaseName = 'htam_springboot_api'
group = 'htam.rest.api.skeleton'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	//Spring
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	compile('com.fasterxml.jackson.core:jackson-databind:latest.release') { force = true }

	//Hibernate
	implementation 'org.hibernate:hibernate-core:5.2.6.Final'
	implementation 'org.hibernate:hibernate-entitymanager:5.2.3.Final'
	implementation 'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.0.Final'


	//DB Driver
	runtimeOnly 'mysql:mysql-connector-java'

	//Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	//etc
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	//Test
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude module: 'junit'
	}
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.5.2'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.2'
	testRuntimeOnly("org.junit.vintage:junit-vintage-engine:5.5.2")
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.2'

	//Gson
	implementation'com.google.code.gson:gson:2.6.2'
}

tasks {
	jacoco {
		toolVersion = "0.8.4"
	}
	jacocoTestReport {
		reports {
			xml.enabled = false
			csv.enabled = false
			html.destination file("${buildDir}/jacocoHtml")
		}
	}
	test.finalizedBy(project.tasks.jacocoTestReport)
}

test {
	useJUnitPlatform()
}
